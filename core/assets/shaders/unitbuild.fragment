#ifdef GL_ES
precision mediump float;
precision mediump int;
#endif

#define step 3.0

uniform sampler2D u_texture;

uniform float u_time;
uniform float u_progress;
uniform vec4 u_color;
uniform vec2 u_uv;
uniform vec2 u_uv2;
uniform vec2 u_texsize;

varying vec4 v_color;
varying vec2 v_texCoord;

#define SPACE 0.75
#define RADIUS 5.0

bool cont(vec2 t, vec2 v){

    for(float cx = -RADIUS; cx <= RADIUS; cx ++){
        for(float cy = -RADIUS; cy <= RADIUS; cy ++){
            if(cx*cx + cy*cy <= RADIUS * RADIUS && texture2D(u_texture, v_texCoord.xy + vec2(cx, cy) * v * SPACE).a <= 0.001){
                return true;
            }
        }
    }
    return false;
}

void main() {
    vec2 coords = (v_texCoord.xy - u_uv) / (u_uv2 - u_uv);
    vec2 t = v_texCoord.xy;
    vec2 v = vec2(1.0/u_texsize.x, 1.0/u_texsize.y);

	vec4 c = texture2D(u_texture, v_texCoord.xy);
	bool outl = cont(t, v);

    if(1.0-abs(coords.x - 0.5)*2.0 < 1.0-u_progress && !outl){
        c = vec4(0.0);
    }

    if(c.a > 0.01){
        float f = abs(sin(coords.x*2.0 + u_time));
        if(f > 0.9 || outl)
            f = 1.0;
        else
            f = 0.0;
        c = mix(c, u_color, f * u_color.a);
    }

    gl_FragColor = c * v_color;
}
